/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // For database driver
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'

    // a dependency on Jackson Databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'

    // and a dependency on vert.x
    implementation 'io.vertx:vertx-core:3.5.3'

    // Simple logging for Java
    implementation 'org.slf4j:slf4j-api:2.0.13'

    // Logback as login provider
    implementation 'ch.qos.logback:logback-classic:1.5.6'

    // Lanterna as TUI provider
    implementation 'com.googlecode.lanterna:lanterna:3.1.2'

    // Hash library, for password hashing
    implementation 'org.mindrot:jbcrypt:0.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
  archiveBaseName = "megaline-mgr"
  archiveVersion = "0.5"
}

application {
    // Define the main class for the application.
    mainClass = 'org.megaline.httpserver.HttpServer'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
